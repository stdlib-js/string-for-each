{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport isPlainObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { factory as contains } from '@stdlib/array-base-assert-contains';\nimport forEachCodeUnit from '@stdlib/string-base-for-each';\nimport forEachCodePoint from '@stdlib/string-base-for-each-code-point';\nimport forEachGraphemeCluster from '@stdlib/string-base-for-each-grapheme-cluster';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// VARIABLES //\n\nvar MODES = [ 'grapheme', 'code_point', 'code_unit' ];\nvar FCNS = {\n\t'grapheme': forEachGraphemeCluster,\n\t'code_point': forEachCodePoint,\n\t'code_unit': forEachCodeUnit\n};\nvar isMode = contains( MODES );\n\n\n// MAIN //\n\n/**\n* Invokes a function for each character in a string.\n*\n* @param {string} str - input string\n* @param {Options} [options] - options\n* @param {string} [options.mode=\"grapheme\"] - type of \"character\" over which to iterate (must be either `grapheme`, `code_point`, or `code_unit`)\n* @param {Function} clbk - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} callback argument must be a function\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} input string\n*\n* @example\n* function log( value, index ) {\n*     console.log( '%d: %s', index, value );\n* }\n*\n* forEach( 'Hello', log );\n*/\nfunction forEach( str, options, clbk ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar opts;\n\tvar cb;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( '1gr3F,Ex', str ) );\n\t}\n\topts = {\n\t\t'mode': 'grapheme'\n\t};\n\tnargs = arguments.length;\n\tif ( nargs === 2 ) {\n\t\tcb = options;\n\t\toptions = null;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isPlainObject( options ) ) {\n\t\t\tcb = clbk;\n\t\t} else {\n\t\t\tcb = options;\n\t\t\toptions = null;\n\t\t\tthisArg = clbk;\n\t\t}\n\t} else { // nargs === 4\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( '1gr2V,FD', options ) );\n\t\t}\n\t\tcb = clbk;\n\t\tthisArg = arguments[ 3 ];\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( '1gr2b,GJ', cb ) );\n\t}\n\tif ( options ) {\n\t\tif ( hasOwnProp( options, 'mode' ) ) {\n\t\t\topts.mode = options.mode;\n\t\t\tif ( !isMode( opts.mode ) ) {\n\t\t\t\tthrow new TypeError( format( '1grLi', 'mode', MODES.join( '\", \"' ), opts.mode ) );\n\t\t\t}\n\t\t}\n\t}\n\tFCNS[ opts.mode ]( str, cb, thisArg );\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default forEach;\n"],"names":["MODES","FCNS","grapheme","forEachGraphemeCluster","code_point","forEachCodePoint","code_unit","forEachCodeUnit","isMode","contains","forEach","str","options","clbk","thisArg","nargs","opts","cb","isString","TypeError","format","mode","arguments","length","isPlainObject","isFunction","hasOwnProp","join"],"mappings":";;w3BAmCA,IAAIA,EAAQ,CAAE,WAAY,aAAc,aACpCC,EAAO,CACVC,SAAYC,EACZC,WAAcC,EACdC,UAAaC,GAEVC,EAASC,EAAUT,GA0BvB,SAASU,EAASC,EAAKC,EAASC,GAC/B,IAAIC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAUP,GACf,MAAM,IAAIQ,UAAWC,EAAQ,WAAYT,IAM1C,GAJAK,EAAO,CACNK,KAAQ,YAGM,KADfN,EAAQO,UAAUC,QAEjBN,EAAKL,EACLA,EAAU,UACJ,GAAe,IAAVG,EACNS,EAAeZ,GACnBK,EAAKJ,GAELI,EAAKL,EACLA,EAAU,KACVE,EAAUD,OAEL,CACN,IAAMW,EAAeZ,GACpB,MAAM,IAAIO,UAAWC,EAAQ,WAAYR,IAE1CK,EAAKJ,EACLC,EAAUQ,UAAW,EACrB,CACD,IAAMG,EAAYR,GACjB,MAAM,IAAIE,UAAWC,EAAQ,WAAYH,IAE1C,GAAKL,GACCc,EAAYd,EAAS,UACzBI,EAAKK,KAAOT,EAAQS,MACdb,EAAQQ,EAAKK,OAClB,MAAM,IAAIF,UAAWC,EAAQ,QAAS,OAAQpB,EAAM2B,KAAM,QAAUX,EAAKK,OAK5E,OADApB,EAAMe,EAAKK,MAAQV,EAAKM,EAAIH,GACrBH,CACR"}