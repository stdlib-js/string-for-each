// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import{factory as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-for-each@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-for-each-code-point@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-for-each-grapheme-cluster@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";var a=["grapheme","code_point","code_unit"],l={grapheme:m,code_point:o,code_unit:n},p=i(a);function h(i,n,o){var m,h,j,g;if(!s(i))throw new TypeError(d("invalid argument. First argument must be a string. Value: `%s`.",i));if(j={mode:"grapheme"},2===(h=arguments.length))g=n,n=null;else if(3===h)t(n)?g=o:(g=n,n=null,m=o);else{if(!t(n))throw new TypeError(d("invalid argument. Options argument must be an object. Value: `%s`.",n));g=o,m=arguments[3]}if(!e(g))throw new TypeError(d("invalid argument. Callback argument must be a function. Value: `%s`.",g));if(n&&r(n,"mode")&&(j.mode=n.mode,!p(j.mode)))throw new TypeError(d('invalid option. `%s` option must be one of the following: "%s". Value: `%s`.',"mode",a.join('", "'),j.mode));return l[j.mode](i,g,m),i}export{h as default};
//# sourceMappingURL=index.mjs.map
